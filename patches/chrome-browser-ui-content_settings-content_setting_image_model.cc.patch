diff --git a/chrome/browser/ui/content_settings/content_setting_image_model.cc b/chrome/browser/ui/content_settings/content_setting_image_model.cc
index 366ba05a508c8e5f77bd0a380ff229da73065819..3e0f44a434f40558a8e0d64846afa0811363ffce 100644
--- a/chrome/browser/ui/content_settings/content_setting_image_model.cc
+++ b/chrome/browser/ui/content_settings/content_setting_image_model.cc
@@ -10,6 +10,7 @@
 #include "base/feature_list.h"
 #include "base/macros.h"
 #include "base/metrics/histogram_macros.h"
+#include "brave/browser/ui/content_settings/brave_content_setting_image_models.h"
 #include "build/build_config.h"
 #include "chrome/app/vector_icons/vector_icons.h"
 #include "chrome/browser/browser_process.h"
@@ -161,6 +162,7 @@ const ContentSettingsImageDetails kImageDetails[] = {
     {CONTENT_SETTINGS_TYPE_PPAPI_BROKER, kExtensionIcon,
      IDS_BLOCKED_PPAPI_BROKER_MESSAGE, 0, IDS_ALLOWED_PPAPI_BROKER_MESSAGE},
     {CONTENT_SETTINGS_TYPE_SOUND, kTabAudioIcon, IDS_BLOCKED_SOUND_TITLE, 0, 0},
+    {CONTENT_SETTINGS_TYPE_AUTOPLAY, kExtensionIcon, IDS_BLOCKED_AUTOPLAY_TITLE, 0, 0},
 };
 
 const ContentSettingsImageDetails* GetImageDetails(ContentSettingsType type) {
@@ -259,6 +261,8 @@ ContentSettingImageModel::CreateForContentType(ImageType image_type) {
       return std::make_unique<ContentSettingFramebustBlockImageModel>();
     case ImageType::CLIPBOARD_READ:
       return std::make_unique<ContentSettingClipboardReadImageModel>();
+    case ImageType::AUTOPLAY:
+      return std::make_unique<ContentSettingBlockedImageModel>(ImageType::AUTOPLAY, CONTENT_SETTINGS_TYPE_AUTOPLAY);
     case ImageType::NUM_IMAGE_TYPES:
       break;
   }
@@ -732,11 +736,15 @@ ContentSettingImageModel::GenerateContentSettingImageModels() {
       ImageType::SOUND,
       ImageType::FRAMEBUST,
       ImageType::CLIPBOARD_READ,
+      ImageType::AUTOPLAY,
   };
 
   std::vector<std::unique_ptr<ContentSettingImageModel>> result;
   for (auto type : kContentSettingImageOrder)
     result.push_back(CreateForContentType(type));
+#if defined(BRAVE_CHROMIUM_BUILD)
+  BraveGenerateContentSettingImageModels(result);
+#endif
 
   return result;
 }
